name: CI Pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Chrome & ChromeDriver
        run: |
            sudo apt-get update
            sudo apt-get install -y google-chrome-stable || sudo apt-get install -y google-chrome-stable=133.0.5672.126-1
            CHROME_VERSION=$(google-chrome --version | grep -oP '[0-9]+\.[0-9]+\.[0-9]+')
            CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1)
            
            echo "Chrome Version: $CHROME_VERSION (Major: $CHROME_MAJOR_VERSION)"
            
            CHROMEDRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_MAJOR_VERSION" || curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE" | tr -d '\n')
            
            if [[ "$CHROMEDRIVER_VERSION" == *"Error"* || -z "$CHROMEDRIVER_VERSION" ]]; then
              echo "Error: No matching ChromeDriver found. Downgrading Chrome..."
              sudo apt-get install -y google-chrome-stable=133.0.5672.126-1
              CHROME_MAJOR_VERSION=133
              CHROMEDRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_133")
            fi
        
            echo "ChromeDriver Version: $CHROMEDRIVER_VERSION"
        
            if [[ "$CHROMEDRIVER_VERSION" == *"Error"* || -z "$CHROMEDRIVER_VERSION" ]]; then
              echo "Error: Failed to retrieve ChromeDriver version!"
              exit 1
            fi
        
            curl -Lo chromedriver_linux64.zip "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
            unzip chromedriver_linux64.zip
            sudo mv chromedriver /usr/local/bin/
            rm chromedriver_linux64.zip
        
        
        

      - name: Grant Execute Permission to Gradle Wrapper
        run: chmod +x gradlew

      - name: Build Project
        run: ./gradlew build --warning-mode all

      - name: Run Tests
        run: ./gradlew test --warning-mode all

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app/build/reports/tests/test/
          if-no-files-found: ignore
