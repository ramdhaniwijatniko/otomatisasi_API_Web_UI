name: CI Pipeline

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install jq (JSON processor)
        run: sudo apt-get install -y jq

          
      - name: Install ChromeDriver (Chrome for Testing)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip
      
          # Ambil versi Chrome yang terinstall
          CHROME_VERSION=$(google-chrome --version | grep -oP '[0-9]+\.[0-9]+\.[0-9]+')
          CHROME_MAJOR_VERSION=$(echo $CHROME_VERSION | cut -d. -f1)
          
          echo "Chrome Version: $CHROME_VERSION (Major: $CHROME_MAJOR_VERSION)"
          
          # Gunakan API resmi untuk mendapatkan ChromeDriver yang sesuai
          API_URL="https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json"
          CHROMEDRIVER_URL=$(curl -sS $API_URL | jq -r --arg ver "$CHROME_VERSION" '.versions[] | select(.version==$ver) | .downloads.chromedriver[] | select(.platform=="linux64") | .url')
      
          if [ -z "$CHROMEDRIVER_URL" ]; then
            echo "Error: No matching ChromeDriver found for version $CHROME_VERSION"
            exit 1
          fi
      
          echo "Downloading ChromeDriver from: $CHROMEDRIVER_URL"
          curl -Lo chromedriver_linux64.zip "$CHROMEDRIVER_URL"
      
          unzip chromedriver_linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          rm -rf chromedriver_linux64.zip chromedriver-linux64
      
          echo "ChromeDriver installed successfully!"
      


      - name: Grant Execute Permission to Gradle Wrapper
        run: chmod +x gradlew

      - name: Build Project
        run: ./gradlew build --warning-mode all

      - name: Run Tests
        run: ./gradlew test --warning-mode all

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: app/build/reports/tests/test/
          if-no-files-found: ignore
